generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  phone     String?
  name      String
  posts     Post[]
  role      Role      @default(USER)
  status    Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]

  tasksCreated  Tasks[] @relation("CreatedTasks")
  tasksAssigned Tasks[] @relation("AssignedTasks")
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  summary    String
  content    String
  status     Int       @default(1)
  ownerId    Int
  owner      User      @relation(fields: [ownerId], references: [id])
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  message   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tasks {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  isAssigned  Boolean  @default(false)  
  isCompleted Boolean  @default(false)
  isActive    Boolean  @default(true)
  creatorId   Int
  assigneeId  Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator  User  @relation("CreatedTasks", fields: [creatorId], references: [id])
  assignee User? @relation("AssignedTasks", fields: [assigneeId], references: [id])
}
